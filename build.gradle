plugins {
	id "net.researchgate.release" version "2.8.1"
	id "com.google.protobuf" version "0.8.13"
	id "com.diffplug.spotless" version "5.2.0"
	id "com.github.spotbugs" version "4.5.0"
	id "com.github.ben-manes.versions" version "0.29.0"
	id "com.github.jakemarsden.git-hooks" version "0.0.2"
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "application"

repositories {
	mavenCentral()
}

release {
	tagTemplate = 'v${version}'
}

sourceSets {
	main {
		java {
			srcDirs "${protobuf.generatedFilesBaseDir}/main/java"
		}
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.11.1"
	}
	generateProtoTasks {
		all().each { task -> }
		ofSourceSet('main')
	}
}

spotless {
	java {
		targetExclude("**/CastMessages.java")
		removeUnusedImports()
		googleJavaFormat()
	}
	format 'gradle', {
		target '**/*.gradle'
		trimTrailingWhitespace()
		indentWithTabs()
	}
	format 'proto', {
		target '**/*.proto'
		trimTrailingWhitespace()
		indentWithTabs()
	}
}

dependencies {
	implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
	implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'com.google.protobuf:protobuf-java:3.13.0'
	implementation 'io.netty:netty-common:4.1.51.Final'
	implementation 'io.netty:netty-transport:4.1.51.Final'
	implementation 'io.netty:netty-codec:4.1.51.Final'
	implementation 'io.netty:netty-buffer:4.1.51.Final'
	implementation 'io.netty:netty-handler:4.1.51.Final'
	implementation 'io.netty:netty-codec-http:4.1.51.Final'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
	implementation 'org.jmdns:jmdns:3.5.5'
	implementation 'commons-cli:commons-cli:1.4'
}

def getGitHash = { ->
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine 'git', 'rev-parse', 'HEAD'
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

mainClassName = 'com.jyuzawa.googolplex_theater.GoogolplexTheater'

jar {
	manifest {
		attributes(
			'Built-By'       : System.properties['user.name'],
			'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
			'Build-Revision' : getGitHash(),
			'Build-Version'  : version,
			'Created-By'     : "Gradle ${gradle.gradleVersion}",
			'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
			'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
		)
	}
}

distributions {
	main {
		contents {
			from 'LICENSE'
		}
	}
}

spotbugs {
	ignoreFailures = true
	excludeFilter = file('spotbugs_exclude.xml')
}

spotbugsMain {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

gitHooks {
	hooks = ['pre-push': 'spotlessCheck']
}